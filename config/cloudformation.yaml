AWSTemplateFormatVersion: "2010-09-09"

Resources: 

  SpriteLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
      - arn:aws:iam::aws:policy/AmazonS3FullAccess

    # SpriteLambda:
    # 	Type: "AWS::Lambda::Function"
    # 	Properties:
    # 	Code:
    # 	    S3Bucket: lambda.lotik.com
    # 	    S3Key: !Ref GotthardBackupsLambdaSourceS3
    # 	Environment:
    # 	    Variables:
    # 	    GOTTHARD_URL: !Ref GotthardUrl
    # 	    GOTTHARD_USER: !Ref GotthardUser
    # 	    GOTTHARD_PASSWORD: !Ref GotthardPassword
    # 	    S3_BUCKET: data.lotik.com
    # 	    S3_KEY_PREFIX: !Sub gotthard/${EnvName}
    # 	Timeout: 10
    # 	FunctionName: !Sub "${EnvName}-GotthardBackupsLambda"
    # 	Handler: app.handler
    # 	Role: !GetAtt GotthardBackupsLambdaRole.Arn
    # 	Runtime: python3.6
    # 	VpcConfig:
    # 	    SubnetIds:
    # 	    - !ImportValue { "Fn::Sub" : "${EnvName}-network-Subnet1" }
    # 	    - !ImportValue { "Fn::Sub" : "${EnvName}-network-Subnet2" }
    # 	    - !ImportValue { "Fn::Sub" : "${EnvName}-network-Subnet3" }
    # 	    SecurityGroupIds:
    # 	    - !Ref GotthardBackupsLambdaSecurityGroup